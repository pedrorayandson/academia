openapi: '3.0.1'
info:
  title: Academia
  description: Este serviço implementa uma forma mais acessível para os usuários conseguirem acessar suas atividades, é uma aplicação em que o professor de educação física vai escrever os treinos que o usuário irá fazer, possivelmente acompanhados de imagens ou vídeos. Usuários podem ver, seguir, comentar sobre o que estão achando dos treinos.
  version: '1.1'
servers:
  - url: http://{host}:{porta}/api
    variables:
      host:
        default: localhost
      porta:
        default: '8000'
paths:
  /users:
    get:
      operationId: getUsers
      summary: Listar usuários
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'

  /user/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: getUser
      summary: Obter usuário por ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        '404':
          description: Usuário não encontrado.
  /user/create:
    post:
      summary: Criar user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '201':
          description: User criado
        '401':
          description: Não autorizado
  /user/edit/{id}:
    put:
      summary: Atualizar usuário
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '200':
          description: Usuário editado
        '401':
          description: Não autorizado
        '404':
          description: Usuário não encontrado.
  /user/delete/{id}:
    delete:
      summary: Excluir usuário
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Usuário deletado
        '401':
          description: Não autorizado
        '404':
          description: Usuário não encontrado.

  /alunos:
    get:
      operationId: getAlunos
      summary: Listar alunos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/aluno'


  /aluno/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer


    get:
      operationId: getAluno
      summary: Obter aluno por ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/aluno'
        '404':
          description: Aluno não encontrado.
  /aluno/create:
    post:
      summary: Criar aluno
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aluno'
      responses:
        '201':
          description: Aluno criado
        '401':
          description: Não autorizado
  /aluno/edit/{id}:
    put:
      summary: Atualizar aluno
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/aluno'
      responses:
        '200':
          description: Aluno editado
        '401':
          description: Não autorizado
        '404':
          description: Aluno não encontrado.
  /aluno/delete/{id}:
    delete:
      summary: Excluir aluno
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Aluno excluído
        '401':
          description: Não autorizado
        '404':
          description: Aluno não encontrado.


  /treinos:
    get:
      operationId: getTreinos
      summary: Listar treinos
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/treino'


  /treino/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer


    get:
      operationId: getTreino
      summary: Obter treino por ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/treino'
        '404':
          description: Treino não encontrado.
  /treino/create:
    post:
      summary: Criar treino
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/treino'
      responses:
        '201':
          description: Treino criado
        '401':
          description: Não autorizado
        '500':
          description: Aluno não encontrado
        

  /treino/edit/{id}:
    put:
      summary: Atualizar treino
      security:
        - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/treino'
      responses:
          '200':
            description: Treino editado
          '401':
            description: Não autorizado
          '404':
            description: Treino id não encontrado
          '500':
            description: Aluno não encontrado

  /treino/delete/{id}:
    delete:
      summary: Excluir treino
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Treino deletado
        '401':
          description: Não autorizado
        '404':
          description: Treino id não encontrada para delete


components:
  schemas:
    user:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: "JL LP"
        email: "jl@gmail.com"
        password: "123123123"

    aluno:
      type: object
      properties:
        nome:
          type: string
          maxLength: 45
        idade:
          type: integer
        peso:
          type: number
          format: float
        altura:
          type: number
          format: float
        pago:
          type: boolean
      example:
        nome: "Mateus Silva"
        idade: 25
        peso: 65.5
        altura: 1.75
        pago: true

    treino:
      type: object
      properties:
        chest_day:
          type: string
        leg_day:
          type: string
        back_day:
          type: string
        aluno_id:
          type: integer
      example:
        chest_day: "Treino de Peito"
        leg_day: "Treino de Perna"
        back_day: "Treino de Costa"
        aluno_id: 1
  securitySchemes:
    bearerAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Precisa estar autenticado
 
